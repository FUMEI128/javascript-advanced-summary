函数定义和调用形式（第四周）
一，函数调用形式
1，函数定义的方式：
通过函数声明定义 function fn(){}
通过函数表达式定义 var result =function fn(){}
通过Function构造函数实例化定义 var reslut =new Function("参数1，参数2，函数体");
Function构造函数创建一个匿名函数。

2，函数的name属性，返回函数实例的名称。
注意：使用new Function()语法的函数其名称为anonymous.

3,函数的length属性，length属性指明函数定义的形参个数
二，函数的几个重要的概念
1)代理函数名：
var f1 =new function f2(){};
f1即是代理函数名，代-+-理函数名的作用域是只能在函数的主体内部，

三，arguments对象
是类数组对象，与数组一样具有length与index属性，本质是对象
注意：只有函数调用时才可用，调用函数的时候就开始生成arguments对象。
特性：双向绑定的特性指的是当函数调用的时候，arguments对象和实际传递了值得形参有了一定的联系
，arguments对象的内容是由函数传递进来的参数决定的，在函数体中修改arguments数组的内容是不行的。

四，call/apply/bind方法
1,call()方法，改变函数执行的this指向。call()方法都是在调用时候才使用
fn.call(参数1，参数2，参数3.,,,,,)
当参数1不存在或为undefined或null的时候，此时的this指向windows.
否则就指向该参数对应的对象。

2,apply方法吗，同call方法一样，都是改变this的指向，其他的用法都是一样的，只有在参数的传递不太一样，除了第一个参数外，其他的参数需要用[]括起来。

3，bind（）方法，bind不会调用函数，不会执行原函数中代码。
执行bind（）,返回原函数（绑定函数），并拥有指定的this值和初始参数。

注意：apply,call会立即调用函数执行，bind不会立即执行函数。

